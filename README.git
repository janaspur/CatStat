CatStat: Earthquake Catalog and Bulletin Quality Control Package

Purpose:
   To provide users with a baseline set of statistics and graphs in order to quickly
assess the quality of data in an earthquake bulletin or catalog.  This is not intended to be
a complete investigation of the given catalog, but as a general, and preliminary look into the
completeness and overall quality of data contained with a bulletin/catalog.


  There are two main programs: QCReport and QCmulti.
------------------------------------------------------------------------------------------------
QCReport: Preliminary QC Analysis of a single catalog/bulletin
QCmulti: Preliminary QC comparison between two catalogs/bulletins
------------------------------------------------------------------------------------------------
For in-depth documentation, references, and detailed explanation of the algorithms used refer to
the documents in the DOCUMENTATION folder
------------------------------------------------------------------------------------------------

Download this code
git clone https://github.com/ekmyers/CatStat.git

Creating a local copy of a repository:
git clone URL

Seeing the changes you made to a file:
git diff FILE

Adding a file to the local copy of a repository:
git status
git add FILE
%% Note that changing the hardcoded path in the main script will indicate a difference between the local and master branch.


Committing (locally!) the changes you've made to any files:
git commit -am"LOG MESSAGE"
git status

Pushing those changes to GitHub:
git push origin master

Then submit a pull request via the github.com website

Adding changes from the upstream master
git fetch upstream %Fetch the branches and their respective commits from upstream repository
git merge upstream/master %Merge changes into LOCAL master branch, syncing with the upstream without losing local changes
git status %Review status of repoistory
git push origin master %This will sync local repository to the merged changes

How to re-sync your local copy with the "authoritative" repo
git remote -v  %List the current conifigured remote repository for your fork
git remote add upstream https://github.com/ekmyers/CatStat.git % Specify new remote upstream repository to be synced with fork
git remote -v %Verify new upsream repoistory
Then follow directions above for adding changes from the upstream master
	For reference:
	https://help.github.com/articles/configuring-a-remote-for-a-fork/
	https://help.github.com/articles/syncing-a-fork/

How to fork a new project...
Set up Git & authentication to GitHub
Navitgate to your fork of the new project repository on GitHub
git clone URL % This is the url with your username, make sure this is the location you want to create it in
Then follow directions above for syncing with original, upstream repository
	For reference:
	https://help.github.com/articles/fork-a-repo/
	https://help.github.com/articles/set-up-git/
